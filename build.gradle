plugins {
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'idea'
    id 'com.github.ben-manes.versions' version '0.52.0'
}

group = 'sb'
version = '3.3'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    maven {
        url = 'https://maven.sergeybochkov.com/releases'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'com.github.loki4j:loki-logback-appender:2.0.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    //
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
    implementation platform('com.konghq:unirest-java-bom:4.5.0')
    implementation 'com.konghq:unirest-java-core'
    implementation 'com.konghq:unirest-modules-jackson'

    implementation 'org.seleniumhq.selenium:selenium-java:4.34.0'
    implementation 'org.jsoup:jsoup:1.21.1'
    implementation 'resnyx:resnyx:9.1'
    //
    compileOnly 'org.jetbrains:annotations:26.0.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootRun') {
    args += ['--spring.config.name=tasks']
}

tasks.named('bootJar') {
    archiveFileName = 'tasks.jar'
}

tasks.named('dependencyUpdates').configure {
    rejectVersionIf {
        return ['.*-m\\d+'].any { part ->
            it.candidate.version.toLowerCase().matches(part)
        }
    }
}